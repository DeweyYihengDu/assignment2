x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if all[x][y] > all[x][z]+all[z][y]:
all
all[1]
all[1][5]
all[1:5]
all[1,5]
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if all[x,y] > all[x,z]+all[z,y]:
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
#if all[x,y] > all[x,z]+all[z,y]:
print(all[x,y])
}
}
}
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
#if all[x,y] > all[x,z]+all[z,y]:
print(all[x,z]+all[z,y])
}
}
}
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if all[x,y] > all[x,z]+all[z,y]:
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if all[x,y] > all[x,z]+all[z,y]{
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if (all[x,y] > all[x,z]+all[z,y]){
print(all[x,z]+all[z,y])
}
}
}
}
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if (all[x,y] =< all[x,z]+all[z,y]){
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if (all[x,y] <= all[x,z]+all[z,y]){
print(1)
}
}
}
}
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if (all[x,y] <= all[x,z]+all[z,y]){
print("It is satisfy (iv)")
}
}
}
}
x1 <- c(0, 6, 14, 8, 7)
x2 <- c(6, 0, 16, 10, 9)
x3 <- c(14,16, 0, 10, 13)
x4 <- c(8, 10, 10, 0, 7)
x5 <- c(7, 9, 13, 7, 0)
all <- data.frame(x1,x2,x3,x4,x5)
for (x in 1:5){
for (y in 1:5){
for (z in 1:5){
if (all[x,y] <= all[x,z]+all[z,y]){
print("It satisfies (iv)")
}
if (all[x,y] > all[x,z]+all[z,y]){
print("It does not satisfy (iv)")
}
}
}
}
all
sum(all[1,])
all[1,]
ri<- function(i,N){
all[i,]/(n-2)
}
ri(1,5)
ri<- function(i,N){
all[i,]/(N-2)
}
ri(1,5)
sum(all[i,])/(N-2)
ri<- function(i,N){
sum(all[i,])/(N-2)
}
ri(1,5)
ri<- function(i,N){
sum(all[i,])/(N-2)
}
for (i in 1:5){
r[i] = ri(1,5)
}
for (i in 1:5){
nn <- paste0('N', i)
r[i] = ri(1,5)
}
D12=all[1,2]-(ri(1,5),ri(2,5))
D12=all[1,2]-(ri(1,5)+ri(2,5))
D12
Dij <- function(i,j,ma,N){
ma[i,j] - (ri(i,N)+ri(i,N))
}
Dij(1,2,all,5)
Dij <- function(i,j,ma,N){
ma[i,j] - (ri(i,N)+ri(j,N))
}
Dij(1,2,all,5)
y1=c(Dij(1,2,all,5),Dij(1,3,all,5),Dij(1,4,all,5),Dij(1,5,all,5))
y1=c(Dij(1,1,all,5),Dij(1,2,all,5),Dij(1,3,all,5),Dij(1,4,all,5),Dij(1,5,all,5))
y2=c(Dij(2,1,all,5),Dij(2,2,all,5),Dij(2,3,all,5),Dij(2,4,all,5),Dij(2,5,all,5))
y3=c(Dij(3,1,all,5),Dij(3,2,all,5),Dij(3,3,all,5),Dij(3,4,all,5),Dij(3,5,all,5))
y4=c(Dij(4,1,all,5),Dij(4,2,all,5),Dij(4,3,all,5),Dij(4,4,all,5),Dij(4,5,all,5))
y5=c(Dij(5,1,all,5),Dij(5,2,all,5),Dij(5,3,all,5),Dij(5,4,all,5),Dij(5,5,all,5))
D = data.frame(y1,y2,y3,y4,y5)
D
m1=c(0,5,5)
m2=c(5,0,4)
m3=c(5,4,0)
M=data.frame(m1,m2,m3)
M1=c(Dij(1,1,M,3),Dij(1,2,M,3),Dij(1,3,M,3))
M2=c(Dij(2,1,M,3),Dij(2,2,M,3),Dij(2,3,M,3))
M3=c(Dij(3,1,M,3),Dij(3,2,M,3),Dij(3,3,M,3))
M67 = data.frame(M1,M2,M3)
M67
m1=c(0,5,5)
m2=c(5,0,4)
m3=c(5,4,0)
M=data.frame(m1,m2,m3)
Dij(1,2,M,3)
Dij(1,3,M,3)
Dij(2,3,M,3)
ri<- function(i,N,ma){
sum(ma[i,])/(N-2)
}
Dij <- function(i,j,ma,N){
ma[i,j] - (ri(i,N,ma)+ri(j,N,ma))
}
Dij(1,2,all,5)
y1=c(Dij(1,1,all,5),Dij(1,2,all,5),Dij(1,3,all,5),Dij(1,4,all,5),Dij(1,5,all,5))
y2=c(Dij(2,1,all,5),Dij(2,2,all,5),Dij(2,3,all,5),Dij(2,4,all,5),Dij(2,5,all,5))
y3=c(Dij(3,1,all,5),Dij(3,2,all,5),Dij(3,3,all,5),Dij(3,4,all,5),Dij(3,5,all,5))
y4=c(Dij(4,1,all,5),Dij(4,2,all,5),Dij(4,3,all,5),Dij(4,4,all,5),Dij(4,5,all,5))
y5=c(Dij(5,1,all,5),Dij(5,2,all,5),Dij(5,3,all,5),Dij(5,4,all,5),Dij(5,5,all,5))
D = data.frame(y1,y2,y3,y4,y5)
D
m1=c(0,5,5)
m2=c(5,0,4)
m3=c(5,4,0)
M=data.frame(m1,m2,m3)
Dij(1,2,M,3)
Dij(1,3,M,3)
Dij(2,3,M,3)
r6=ri()
r6=ri(6,3,M)
r6=ri(6,3,M)
r7=ri(7,3,M)
r6,r7
r6
r7
r6
M
r6=ri(2,3,M)
r7=ri(3,3,M)
r6
r7
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
ci1=seq(0,3,by=0.01)
v1=vm*ci1/(ci1+k)
v2=f*ci1
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
c2=vm/f-k
plot(x=ci, y=v,xlim = c(0,3))
lines(x=ci1, y=v1,col="green")
lines(x=ci1, y=v2,col="blue")
abline(v=c2,lwd=4,col="red")
#par(new=TRUE)
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
ci1=seq(0,3,by=0.01)
v1=vm*ci1/(ci1+k)
v2=f*ci1
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
c2=vm/f-k
plot(x=ci, y=v,xlim = c(0,3))
lines(x=ci1, y=v1,col="green",lty = 2)
lines(x=ci1, y=v2,col="blue")
abline(v=c2,lwd=4,col="red")
abline(v=c2,lwd=4,col="red",lty = 2)
#par(new=TRUE)
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
ci1=seq(0,3,by=0.01)
v1=vm*ci1/(ci1+k)
v2=f*ci1
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
c2=vm/f-k
plot(x=ci, y=v,xlim = c(0,3))
lines(x=ci1, y=v1,col="green",lty = 2)
lines(x=ci1, y=v2,col="blue",lty = 2)
abline(v=c2,lwd=3,col="red",lty = 2)
#par(new=TRUE)
# The parameters input
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
# show the function about v
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
# ci1 is the c to draw homogeneous and flow-limited regime
ci1=seq(0,3,by=0.01)
# v1 is the curve of "homogeneous regime"
v1=vm*ci1/(ci1+k)
# v2 is the curve of "flow-limited regime"
v2=f*ci1
# c2 is at the transition between the homogeneous and flow-limited regimes occurs at c2
c2=vm/f-k
plot(x=ci, y=v,xlim = c(0,3))
lines(x=ci1, y=v1,col="green",lty = 2)
lines(x=ci1, y=v2,col="blue",lty = 2)
abline(v=c2,lwd=3,col="red",lty = 2)
?plot
?line
?plot
# The parameters input
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
# show the function about v and ci
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
# ci1 is the c to draw homogeneous and flow-limited regime
ci1=seq(0,3,by=0.01)
# v1 is the curve of "homogeneous regime"
v1=vm*ci1/(ci1+k)
# v2 is the curve of "flow-limited regime"
v2=f*ci1
# c2 is at the transition between the homogeneous and flow-limited regimes occurs at c2
c2=vm/f-k
# Dram the plot
plot(x=ci, y=v,xlim = c(0,3),
xlab = "The substrate concentration in mmol/l",
ylab = "The reaction rate in mmol/min"
main="aa")
# The parameters input
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
# show the function about v and ci
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
# ci1 is the c to draw homogeneous and flow-limited regime
ci1=seq(0,3,by=0.01)
# v1 is the curve of "homogeneous regime"
v1=vm*ci1/(ci1+k)
# v2 is the curve of "flow-limited regime"
v2=f*ci1
# c2 is at the transition between the homogeneous and flow-limited regimes occurs at c2
c2=vm/f-k
# Dram the plot
plot(x=ci, y=v,xlim = c(0,3),
xlab = "The substrate concentration in mmol/l",
ylab = "The reaction rate in mmol/min",
main="aa")
lines(x=ci1, y=v1,col="green",lty = 2)
lines(x=ci1, y=v2,col="blue",lty = 2)
abline(v=c2,lwd=3,col="red",lty = 2)
# The parameters input
v <- seq(0,1,by=0.0001)
f=1
k=0.1
vm=1
# show the function about v and ci
ci = v/(f*(1-exp(-(vm-v)/(f*k))))
# ci1 is the c to draw homogeneous and flow-limited regime
ci1=seq(0,3,by=0.01)
# v1 is the curve of "homogeneous regime"
v1=vm*ci1/(ci1+k)
# v2 is the curve of "flow-limited regime"
v2=f*ci1
# c2 is at the transition between the homogeneous and flow-limited regimes occurs at c2
c2=vm/f-k
# Dram the plot
plot(x=ci, y=v,xlim = c(0,3),
xlab = "The substrate concentration in mmol/l",
ylab = "The reaction rate in mmol/min",
main= "The relation between V and ci in Steady state solution")
lines(x=ci1, y=v1,col="green",lty = 2,lwd=3)
lines(x=ci1, y=v2,col="blue",lty = 2,lwd=3)
abline(v=c2,lwd=3,col="red",lty = 2)
library(tidyverse)
library(metafor)
library(orchaRd)
library(here)
library(pacman)
library(flextable)
data1 <- read_csv(here('data', 'OA_activitydat_20190302_BIOL3207.csv'))
fish_name <- data1 %>% select(species) %>% unique()
tidydata <- function(i){
control <- data1 %>%
filter(species == i) %>%
filter(treatment=="control") %>%
select(activity) %>%
drop_na()
oa <- data1 %>%
filter(species == i) %>%
filter(treatment=="CO2") %>%
select(activity) %>%
drop_na()
Species = i
ctrl.sd = sd(control$activity)
ctrl.mean=mean(control$activity)
ctrl.n=nrow(control)
oa.sd = sd(oa$activity)
oa.mean=mean(oa$activity)
oa.n=nrow(oa)
data.frame(Species,ctrl.mean,ctrl.sd,ctrl.n, oa.mean, oa.sd, oa.n)
}
a=rbind(tidydata("ambon"),tidydata("lemon"),tidydata("chromis"),tidydata("acantho"),tidydata("humbug"),tidydata("whitedams"))
clark_paper_data <- read_csv(here("data","clark_paper_data.csv"))
clark_paper_data
b = cbind(clark_paper_data,a)
ocean_meta_data <- read_csv(here("data","ocean_meta_data.csv"))
meta_data = rbind(b, ocean_meta_data)
head(meta_data)
colnames(meta_data)[3] <- 'Year_online'
colnames(meta_data)[4] <- 'Year_print'
meta_data <- meta_data %>% mutate(residual = 1:n())
head(meta_data)
InRR_data <- escalc(measure = "ROM",
n1i=ctrl.n, n2i = oa.n, m1i = ctrl.mean,m2i = oa.mean,sd1i = ctrl.sd,sd2i = oa.sd,
data=meta_data, var.names = c("InRR", "v"))
ss <- rma.mv(InRR~1, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain", test = "t")
summary(ss)
i2_vals <- orchaRd::i2_ml(ss)
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
predict(ss)
funnel(x=InRR_data$InRR, vi = InRR_data$v, yaxis = "seinv", ylim = c(0.00001,60),xlim = c(-2,2),
digits = 3, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE)
aaa <- InRR_data %>% filter(v < 20)
ggplot(aaa, aes(y = InRR, x = v)) + geom_point() + geom_smooth(method = "lm") +
labs(y = "InRR", x = "Sampling Variance of InRR") +
theme_classic()
ggplot(InRR_data, aes(y = InRR_data$InRR, x =InRR_data$Year_online, size = 1/sqrt(v))) + geom_point(alpha = 0.3) +
geom_smooth(method = "lm", col = "red", show.legend = FALSE) +
labs(x = "Publication Year",y = "InRR", size = "Precision (1/SE)") +
theme_classic()
#orchaRd::orchard_plot(ss, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
st <- rma.mv(InRR~Year_online, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain",test = "t")
ggplot(InRR_data, aes(y = InRR_data$InRR, x =InRR_data$Year_online, size = 1/sqrt(v))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", col = "red", show.legend = FALSE) +
labs(x = "Publication Year",y = "InRR", size = "Precision (1/SE)") +
theme_classic()
metareg_time <- rma.mv(InRR ~ Year_online + 1/v, V = 1/v,
random = list(~1|Study, ~1|residual, ~1|Species),
test = "t", dfs = "contain", data = InRR_data)
summary(metareg_time)
ss <- rma.mv(InRR~1, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species, ~1|Year_online),
dfs = "contain", test = "t")
summary(ss)
i2_vals <- orchaRd::i2_ml(ss)
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
predict(ss, transf = "transf.ztor")
flextable(predict(ss, transf = "transf.ztor"))
orchaRd::orchard_plot(ss, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
orchaRd::orchard_plot(ss, group = "InRR", mod = "InRR", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
forestplot<-forest(ss,refline = 1,mlab="Random-effect Model for All Studies",slab=paste(metabirth3$author,metabirth3$year,sep=","),xlab="β",showweights = T)
?forest
forestplot<-forest(ss)
ss
predict(ss, transf = "transf.ztor")
orchaRd::orchard_plot(ss, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
forestdata <- rma.mv(InRR~Year_online+v, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain",test = "t")
orchaRd::orchard_plot(ss, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
orchaRd::orchard_plot(forestdata, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
forestdata
forestdata
forestdata
forestdata <- rma.mv(InRR~Year_online+v, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain",test = "t")
orchaRd::orchard_plot(forestdata, group = "Study", mod = "Year_online", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
forestdata
orchaRd::orchard_plot(forestdata, group = "Study", mod = "v", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
orchaRd::orchard_plot(forestdata, group = "Species", mod = "REML", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
ggplot(InRR_data, aes(y = InRR_data$InRR, x =InRR_data$Year_online, size = 1/v)) + geom_point(alpha = 0.3) +
geom_smooth(method = "lm", col = "red", show.legend = FALSE) +
labs(x = "Publication Year",y = "InRR", size = "Precision (1/SE)") +
theme_classic()
forestdata <- rma.mv(InRR~Year_online, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain",test = "t")
#orchaRd::orchard_plot(forestdata, group = "Species", mod = "REML", data = InRR_data, xlab = "ghghation Coefficient (Zr)",angle = 45)
st <- rma.mv(InRR, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain",test = "t")
ggplot(InRR_data, aes(y = InRR_data$InRR, x =InRR_data$Year_online, size = 1/sqrt(v))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", col = "red", show.legend = FALSE) +
labs(x = "Publication Year",y = "InRR", size = "Precision (1/SE)") +
theme_classic()
mly <- rma.mv(InRR~Year_online, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain", test = "t")
mly
mly <- rma.mv(InRR~Year_online+v, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain", test = "t")
mly
mly <- rma.mv(InRR~v, V=v,data=InRR_data,method = "REML",
random = list(~1|Study, ~1|residual, ~1|Species),
dfs = "contain", test = "t")
mly
